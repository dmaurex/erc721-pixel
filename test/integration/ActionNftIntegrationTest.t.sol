// SPDX-License-Identifier: SEE LICENSE IN LICENSE

pragma solidity 0.8.30;

import {Test, console} from "forge-std/Test.sol";
import {ActionNft} from "src/ActionNft.sol";
import {DeployActionNft} from "script/DeployActionNft.s.sol";

contract ActionNftIntegrationTest is Test {
    ActionNft actionNft;
    DeployActionNft deployer;
    string public constant RUN_URI =
        "data:application/json;base64,eyJuYW1lIjoiUGl4ZWwiLCAiZGVzY3JpcHRpb24iOiJBbiBORlQgdGhhdCByZWZsZWN0cyB0aGUgYWN0aW9uIG9mIHRoZSBvd25lciwgMTAwJSBvbiBDaGFpbiEiLCAiYXR0cmlidXRlcyI6IFt7InRyYWl0X3R5cGUiOiAiYWN0aW9uIiwgInZhbHVlIjogMTAwfV0sICJpbWFnZSI6ImRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEQ5NGJXd2dkbVZ5YzJsdmJqMGlNUzR3SWlCbGJtTnZaR2x1WnowaVZWUkdMVGdpUHo0OGMzWm5JSFpsY25OcGIyNDlJakV1TVNJZ2VHMXNibk05SW1oMGRIQTZMeTkzZDNjdWR6TXViM0puTHpJd01EQXZjM1puSWlCM2FXUjBhRDBpTVRRMElpQm9aV2xuYUhROUlqRTJNeUkrUEhCaGRHZ2daRDBpVFRBc01DQk1ORFlzTUNCTU5EWXNNU0JNTkRjc01TQk1ORGNzTmlCTU5USXNOaUJNTlRJc055Qk1OVE1zTnlCTU5UTXNNeklnVERVeUxETXlJRXcxTWl3ek15Qk1Nak1zTXpNZ1RESXpMRE01SUV3ME1Dd3pPU0JNTkRBc05EQWdURFF4TERRd0lFdzBNU3cwTkNCTU5EQXNORFFnVERRd0xEUTFJRXd4Tnl3ME5TQk1NVGNzTlRjZ1RESTRMRFUzSUV3eU9DdzFPQ0JNTWprc05UZ2dUREk1TERZNElFd3lPQ3cyT0NCTU1qZ3NOamtnVERJMExEWTVJRXd5TkN3Mk9DQk1Nak1zTmpnZ1RESXpMRFl6SUV3eE55dzJNeUJNTVRjc09ETWdUREUyTERneklFd3hOaXc0TkNCTU1URXNPRFFnVERFeExEa3lJRXd4TUN3NU1pQk1NVEFzT1RNZ1REVXNPVE1nVERVc09UZ2dURFFzT1RnZ1REUXNPVGtnVEMweExEazVJRXd0TVN3eE1EVWdURGNzTVRBMUlFdzNMREV3TmlCTU9Dd3hNRFlnVERnc01URXdJRXczTERFeE1DQk1OeXd4TVRFZ1RDMDJMREV4TVNCTUxUWXNNVEV3SUV3dE55d3hNVEFnVEMwM0xERXdOU0JNTFRFNUxERXdOU0JNTFRFNUxERXhNQ0JNTFRJd0xERXhNQ0JNTFRJd0xERXhNU0JNTFRJMUxERXhNU0JNTFRJMUxERXhOaUJNTFRJMkxERXhOaUJNTFRJMkxERXhOeUJNTFRNeExERXhOeUJNTFRNeExERXlNeUJNTFRJMkxERXlNeUJNTFRJMkxERXlOQ0JNTFRJMUxERXlOQ0JNTFRJMUxERXlPQ0JNTFRJMkxERXlPQ0JNTFRJMkxERXlPU0JNTFRNMkxERXlPU0JNTFRNMkxERXlPQ0JNTFRNM0xERXlPQ0JNTFRNM0xERXdOU0JNTFRReUxERXdOU0JNTFRReUxERXdOQ0JNTFRRekxERXdOQ0JNTFRRekxEazVJRXd0TkRnc09Ua2dUQzAwT0N3NU9DQk1MVFE1TERrNElFd3RORGtzT1RNZ1RDMDFOQ3c1TXlCTUxUVTBMRGt5SUV3dE5UVXNPVElnVEMwMU5TdzROeUJNTFRZd0xEZzNJRXd0TmpBc09EWWdUQzAyTVN3NE5pQk1MVFl4TERneElFd3ROallzT0RFZ1RDMDJOaXc0TUNCTUxUWTNMRGd3SUV3dE5qY3NORFlnVEMwMk5pdzBOaUJNTFRZMkxEUTFJRXd0TmpJc05EVWdUQzAyTWl3ME5pQk1MVFl4TERRMklFd3ROakVzTlRjZ1RDMDFOaXcxTnlCTUxUVTJMRFU0SUV3dE5UVXNOVGdnVEMwMU5TdzJNeUJNTFRVd0xEWXpJRXd0TlRBc05qUWdUQzAwT1N3Mk5DQk1MVFE1TERZNUlFd3RNemNzTmprZ1RDMHpOeXcyTkNCTUxUTTJMRFkwSUV3dE16WXNOak1nVEMwek1TdzJNeUJNTFRNeExEVTRJRXd0TXpBc05UZ2dUQzB6TUN3MU55Qk1MVEl5TERVM0lFd3RNaklzTlRJZ1RDMHlNU3cxTWlCTUxUSXhMRFV4SUV3dE1UTXNOVEVnVEMweE15dzBOaUJNTFRFeUxEUTJJRXd0TVRJc05EVWdUQzAzTERRMUlFd3ROeXczSUV3dE5pdzNJRXd0Tml3MklFd3RNU3cySUV3dE1Td3hJRXd3TERFZ1dpQk5OU3c1SUV3MUxERTFJRXd4TVN3eE5TQk1NVEVzT1NCYUlDSWdabWxzYkQwaUl6QXdNREF3TUNJZ2RISmhibk5tYjNKdFBTSjBjbUZ1YzJ4aGRHVW9PREFzTVRjcElpOCtQSEJoZEdnZ1pEMGlUVEFzTUNCTU16QXNNQ0JNTXpBc01TQk1NekVzTVNCTU16RXNNaUJNTXpBc01pQk1NekFzTXlCTU1Dd3pJRm9nSWlCbWFXeHNQU0lqTURBd01EQXdJaUIwY21GdWMyWnZjbTA5SW5SeVlXNXpiR0YwWlNnd0xERXlOU2tpTHo0OGNHRjBhQ0JrUFNKTk1Dd3dJRXcwTXl3d0lFdzBNeXd6SUV3d0xETWdUREFzTWlCTUxURXNNaUJNTFRFc01TQk1NQ3d4SUZvZ0lpQm1hV3hzUFNJak1EQXdNREF3SWlCMGNtRnVjMlp2Y20wOUluUnlZVzV6YkdGMFpTZ3hNREVzTVRJMUtTSXZQanh3WVhSb0lHUTlJazB3TERBZ1RERXdMREFnVERFd0xETWdUREFzTXlCTU1Dd3lJRXd0TVN3eUlFd3RNU3d4SUV3d0xERWdXaUFpSUdacGJHdzlJaU13TURBd01EQWlJSFJ5WVc1elptOXliVDBpZEhKaGJuTnNZWFJsS0RFek5Dd3hNelFwSWk4K1BIQmhkR2dnWkQwaVRUQXNNQ0JNTnl3d0lFdzNMREVnVERnc01TQk1PQ3d5SUV3M0xESWdURGNzTXlCTU1Dd3pJRXd3TERJZ1RDMHhMRElnVEMweExERWdUREFzTVNCYUlDSWdabWxzYkQwaUl6QXdNREF3TUNJZ2RISmhibk5tYjNKdFBTSjBjbUZ1YzJ4aGRHVW9PVGdzTVRNM0tTSXZQand2YzNablBnbz0ifQ==";
    string public constant STOP_URI =
        "data:application/json;base64,eyJuYW1lIjoiUGl4ZWwiLCAiZGVzY3JpcHRpb24iOiJBbiBORlQgdGhhdCByZWZsZWN0cyB0aGUgYWN0aW9uIG9mIHRoZSBvd25lciwgMTAwJSBvbiBDaGFpbiEiLCAiYXR0cmlidXRlcyI6IFt7InRyYWl0X3R5cGUiOiAiYWN0aW9uIiwgInZhbHVlIjogMTAwfV0sICJpbWFnZSI6ImRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEQ5NGJXd2dkbVZ5YzJsdmJqMGlNUzR3SWlCbGJtTnZaR2x1WnowaVZWUkdMVGdpUHo0OGMzWm5JSFpsY25OcGIyNDlJakV1TVNJZ2VHMXNibk05SW1oMGRIQTZMeTkzZDNjdWR6TXViM0puTHpJd01EQXZjM1puSWlCM2FXUjBhRDBpTVRRMElpQm9aV2xuYUhROUlqRTJNeUkrUEhCaGRHZ2daRDBpVFRBc01DQk1OaXd3SUV3MkxERXpPQ0JNTFRrc01UTTRJRXd0T1N3eE16Y2dUQzB4TUN3eE16Y2dUQzB4TUN3eE16WWdUQzA1TERFek5pQk1MVGtzTVRNMUlFd3ROQ3d4TXpVZ1RDMDBMRGt6SUV3dE1UZ3NPVE1nVEMweE9DdzVNaUJNTFRFNUxEa3lJRXd0TVRrc09UQWdUQzB5TVN3NU1DQk1MVEl4TERnNUlFd3RNaklzT0RrZ1RDMHlNaXc0TnlCTUxUSTBMRGczSUV3dE1qUXNPRFlnVEMweU5TdzROaUJNTFRJMUxEZzBJRXd0TWpjc09EUWdUQzB5Tnl3NE15Qk1MVEk0TERneklFd3RNamdzTlRjZ1RDMDBNeXcxTnlCTUxUUXpMRFk1SUV3dE16SXNOamtnVEMwek1pdzNNQ0JNTFRNeExEY3dJRXd0TXpFc09EQWdUQzB6TWl3NE1DQk1MVE15TERneElFd3RNellzT0RFZ1RDMHpOaXc0TUNCTUxUTTNMRGd3SUV3dE16Y3NOelVnVEMwME15dzNOU0JNTFRRekxEazFJRXd0TkRRc09UVWdUQzAwTkN3NU5pQk1MVFE1TERrMklFd3RORGtzTVRBMElFd3ROVEFzTVRBMElFd3ROVEFzTVRBMUlFd3ROVFVzTVRBMUlFd3ROVFVzTVRFd0lFd3ROVFlzTVRFd0lFd3ROVFlzTVRFeElFd3ROakVzTVRFeElFd3ROakVzTVRJd0lFd3RPQ3d4TWpBZ1RDMDRMREV5TVNCTUxUY3NNVEl4SUV3dE55d3hNaklnVEMwNExERXlNaUJNTFRnc01USXpJRXd0TmpFc01USXpJRXd0TmpFc01USTVJRXd0TlRrc01USTVJRXd0TlRrc01UTXdJRXd0TlRnc01UTXdJRXd0TlRnc01UTXhJRXd0TlRrc01UTXhJRXd0TlRrc01UTXlJRXd0TmpFc01UTXlJRXd0TmpFc01UTTFJRXd0TlRZc01UTTFJRXd0TlRZc01UTTJJRXd0TlRVc01UTTJJRXd0TlRVc01UUXdJRXd0TlRZc01UUXdJRXd0TlRZc01UUXhJRXd0TmpZc01UUXhJRXd0TmpZc01UUXdJRXd0Tmpjc01UUXdJRXd0Tmpjc01UTXlJRXd0Tmprc01UTXlJRXd0Tmprc01UTXhJRXd0TnpBc01UTXhJRXd0TnpBc01UTXdJRXd0Tmprc01UTXdJRXd0Tmprc01USTVJRXd0Tmpjc01USTVJRXd0Tmpjc01USXpJRXd0T0RVc01USXpJRXd0T0RVc01USTRJRXd0T0RZc01USTRJRXd0T0RZc01USTVJRXd0T1RFc01USTVJRXd0T1RFc01UTTFJRXd0T0RZc01UTTFJRXd0T0RZc01UTTJJRXd0T0RVc01UTTJJRXd0T0RVc01UUXdJRXd0T0RZc01UUXdJRXd0T0RZc01UUXhJRXd0T1RZc01UUXhJRXd0T1RZc01UUXdJRXd0T1Rjc01UUXdJRXd0T1Rjc01USXpJRXd0TVRNNExERXlNeUJNTFRFek9Dd3hNakFnVEMwNU55d3hNakFnVEMwNU55d3hNVGNnVEMweE1ESXNNVEUzSUV3dE1UQXlMREV4TmlCTUxURXdNeXd4TVRZZ1RDMHhNRE1zTVRFeElFd3RNVEE0TERFeE1TQk1MVEV3T0N3eE1UQWdUQzB4TURrc01URXdJRXd0TVRBNUxERXdOU0JNTFRFeE5Dd3hNRFVnVEMweE1UUXNNVEEwSUV3dE1URTFMREV3TkNCTUxURXhOU3c1T1NCTUxURXlNQ3c1T1NCTUxURXlNQ3c1T0NCTUxURXlNU3c1T0NCTUxURXlNU3c1TXlCTUxURXlOaXc1TXlCTUxURXlOaXc1TWlCTUxURXlOeXc1TWlCTUxURXlOeXcxT0NCTUxURXlOaXcxT0NCTUxURXlOaXcxTnlCTUxURXlNaXcxTnlCTUxURXlNaXcxT0NCTUxURXlNU3cxT0NCTUxURXlNU3cyT1NCTUxURXhOaXcyT1NCTUxURXhOaXczTUNCTUxURXhOU3czTUNCTUxURXhOU3czTlNCTUxURXhNQ3czTlNCTUxURXhNQ3czTmlCTUxURXdPU3czTmlCTUxURXdPU3c0TVNCTUxUazNMRGd4SUV3dE9UY3NOellnVEMwNU5pdzNOaUJNTFRrMkxEYzFJRXd0T1RFc056VWdUQzA1TVN3M01DQk1MVGt3TERjd0lFd3RPVEFzTmprZ1RDMDRNaXcyT1NCTUxUZ3lMRFkwSUV3dE9ERXNOalFnVEMwNE1TdzJNeUJNTFRjekxEWXpJRXd0TnpNc05UZ2dUQzAzTWl3MU9DQk1MVGN5TERVM0lFd3ROamNzTlRjZ1RDMDJOeXd4T1NCTUxUWTJMREU1SUV3dE5qWXNNVGdnVEMwMk1Td3hPQ0JNTFRZeExERXpJRXd0TmpBc01UTWdUQzAyTUN3eE1pQk1MVEUwTERFeUlFd3RNVFFzTVRNZ1RDMHhNeXd4TXlCTUxURXpMREU0SUV3dE9Dd3hPQ0JNTFRnc01Ua2dUQzAzTERFNUlFd3ROeXcxTUNCTUxUZ3NOVEFnVEMwNExEVXhJRXd0TVRNc05URWdUQzB4TXl3M09DQk1MVGdzTnpnZ1RDMDRMRGM1SUV3dE55dzNPU0JNTFRjc09EY2dUQzB5TERnM0lFd3RNaXc0T0NCTUxURXNPRGdnVEMweExEVTNJRXd0TXl3MU55Qk1MVE1zTlRZZ1RDMDBMRFUySUV3dE5DdzBJRXd0TXl3MElFd3RNeXd6SUV3dE1Td3pJRXd0TVN3eElFd3dMREVnV2lCTkxUVTFMREl4SUV3dE5UVXNNek1nVEMwME15d3pNeUJNTFRRekxESXhJRm9nVFMwM09Td3hNVGNnVEMwM09Td3hNakFnVEMwM015d3hNakFnVEMwM015d3hNVGNnV2lBaUlHWnBiR3c5SWlNd01EQXdNREFpSUhSeVlXNXpabTl5YlQwaWRISmhibk5zWVhSbEtERXpPQ3d4TWlraUx6NDhjR0YwYUNCa1BTSk5NQ3d3SUV3MExEQWdURFFzTVNCTU5Td3hJRXcxTERVZ1REUXNOU0JNTkN3MklFd3dMRFlnVERBc05TQk1MVEVzTlNCTUxURXNNU0JNTUN3eElGb2dJaUJtYVd4c1BTSWpNREF3TURBd0lpQjBjbUZ1YzJadmNtMDlJblJ5WVc1emJHRjBaU2c0Tnl3ek5pa2lMejQ4Y0dGMGFDQmtQU0pOTUN3d0lFdzNMREFnVERjc01TQk1PQ3d4SUV3NExESWdURGNzTWlCTU55d3pJRXd3TERNZ1REQXNNaUJNTFRFc01pQk1MVEVzTVNCTU1Dd3hJRm9nSWlCbWFXeHNQU0lqTURBd01EQXdJaUIwY21GdWMyWnZjbTA5SW5SeVlXNXpiR0YwWlNneE5Td3hOVE1wSWk4K1BDOXpkbWMrQ2c9PSJ9";
    address COLLECTOR = makeAddr("collector");

    function setUp() public {
        deployer = new DeployActionNft();
        actionNft = deployer.run();
    }

    function testViewTokenUriIntegration() public {
        vm.prank(COLLECTOR);
        actionNft.mintNft();

        console.log(actionNft.tokenURI(0));
    }

    function testFlipNftToStop() public {
        // Arrange
        vm.prank(COLLECTOR);
        actionNft.mintNft();
        vm.prank(COLLECTOR);
        // Act
        actionNft.flipAction(0); // flips to stop action
        // Assert
        // assert(keccak256(abi.encode(actionNft.tokenURI(0))) == keccak256(abi.encode(STOP_URI)));
        // Advantage of using assertEq: prints both parameters when error occurs
        assertEq(keccak256(abi.encode(actionNft.tokenURI(0))), keccak256(abi.encode(STOP_URI)));
    }
}
